[
  {
    "first": "first","id":
  "html-and-css",
    "title": "HTML & CSS",
    "subTitle": "最初最初最初最初最初最初最初最初最初最初32423423423423最初最初最初",
    "description": "最初最初最初最初最初最初最初最初最初最初32423423423423最初最初最初、全てのWebページでHTMLとCSSは使われています。あなたの頭の中にある考えを表現したり発信したりする手段を手に入れましょう。",
    "thumbnail": "../images/skills/html-and-css/thumbnail.png",
    "overview": "最初最初最初最初最初最初最初最初最初最初32423423423423最初最初最初。<br><br>HTMLやCSSが書かれたファイルをWebサーバー上に置くことで、全世界の人にWebページを公開することができます。<br><br>HTMLはWebページに表示する文字や画像などの内容とそれらの構造を指定する役割があり、さまざまな<span data-type='term'>タグ</span>を使用して記述します。<br><br>CSSは色やレイアウトなど見た目を装飾する役割があり、HTMLで記述した要素に対して<span data-type='term'>プロパティ</span>で見た目を指定します。",
    "image": "../images/skills/html-and-css/illustration.svg",
    "purpose": "最初最初最初最初最初最初最初最初最初最初32423423423423最初最初最初、全てのWebページでHTMLとCSSは使われています。あなたがWebページを作成したいと考えているなら、HTMLとCSSの知識は必要不可欠です。<br><br>CSSのプロパティを使いこなすことができれば、さまざまな画面サイズの表示に対応した、思い通りの見た目のWebページを作れるようになります。あなたはアイデアを形にして世界中に公開できるようになるということです。<br><br>HTMLとCSSを一通り使えるようになったら、ポートフォリオサイトなどを作ってあなたが共有したい情報や、あなたの作った作品を世界に発信してみましょう。",
    "sceneId": "web-basics",
    "getStarted": {
      "easy": {
        "description": "シンプルなWebページを作成するのに必要な知識は多くありません。まずは、HTMLの基本的なタグを使ってシンプルなWebページの構造を作成したあと、CSSを使ってどのように見た目が変わるかを学んでいきましょう。",
        "tasks": [
          {
            "title": "HTML&CSSの基本を理解しよう",
            "child": [
              "HTMLに触れてみよう",
              "CSSに触れてみよう",
              "ボックスモデルを学ぼう",
              "ヘッダーやメニューなどページ要素のレイアウトを作ってみよう"
            ]
          },
          {
            "title": "レスポンシブデザインを理解しよう",
            "child": [
              "メディアクエリを使ってみよう",
              "タブレット向けのレイアウトを作ってみよう",
              "スマートフォン向けのレイアウトを作ってみよう"
            ]
          }
        ]
      },
      "middle": {
        "description": "ここでは、自分のWebページ作成にチャレンジしましょう。また、実践ではアクセシビリティの基本的な理解も必要になります。オススメの教材を参考に学んでみましょう。",
        "tasks": [
          {
            "title": "自分のWebページを作ってみよう",
            "child": [
              "複数ページの構成を考えてみよう",
              "複数ページをレイアウトしてみよう",
              "faviconを設定してみよう",
              "OGPを設定してみよう",
              "GitHub PagesでWebページを公開してみよう"
            ]
          },
          {
            "title": "アクセシビリティの基本を理解しよう",
            "child": [
              "アクセシビリティの概要を知ろう",
              "HTMLとアクセシビリティについて知ろう",
              "HTML要素や属性のセマンティクスについて知ろう",
              "CSSとアクセシビリティについて知ろう",
              "アクセシビリティを考慮した基本的なデザインを知ろう"
            ]
          }
        ]
      }
    }
  },
  {
    "first": "first","id":
  "editors",
    "title": "エディタ",
    "subTitle": "最初最初最初最初最初最初最初最初最初最初32423423423423最初最初最初",
    "description": "最初最初最初最初最初最初最初最初最初最初32423423423423最初最初最初、全てのWebページでHTMLとCSSは使われています。あなたの頭の中にある考えを表現したり発信したりする手段を手に入れましょう。",
    "thumbnail": "../images/skills/html-and-css/thumbnail.png",
    "overview": "最初最初最初最初最初最初最初最初最初最初32423423423423最初最初最初。<br><br>HTMLやCSSが書かれたファイルをWebサーバー上に置くことで、全世界の人にWebページを公開することができます。<br><br>HTMLはWebページに表示する文字や画像などの内容とそれらの構造を指定する役割があり、さまざまな<span data-type='term'>タグ</span>を使用して記述します。<br><br>CSSは色やレイアウトなど見た目を装飾する役割があり、HTMLで記述した要素に対して<span data-type='term'>プロパティ</span>で見た目を指定します。",
    "image": "../images/skills/editors/illustration.svg",
    "purpose": "エディタを利用するとコーディングが快適になり、開発効率の向上が期待できます。<br><br>コーディングはメモ帳でも行うことができます。しかし、メモ帳はコーディングを前提としたツールではないため、その効率を上げる機能は備わっていません。<br><br>エディタを使えば、シンタックスハイライトや補完機能などにより、快適にコーディングができるようになることでしょう。その他にもプラグインを導入することで必要な機能を随時追加できます。<br><br>どのエディターを使うか迷ったら、その他の拡張機能やIDE機能についても調べて判断しましょう。<br><br>エディタを利用して、コーディングを快適に行いましょう。",
    "sceneId": "web-basics",
    "getStarted": {
      "easy": {
        "description": "ここでは、近年もっともシェアが高いVisual Studio Codeを紹介しています。軽量で扱いやすく機能も豊富なので、使いこなせるようになりましょう。",
        "tasks": [
          {
            "title": "エディタをセットアップしよう",
            "child": [
              "Visual Studio Codeをインストールしよう",
              "コードを自動保存できるよう設定にしよう",
              "コードを自動整形できるようにしよう",
              "ファイルパスを補完できるようにしよう"
            ]
          },
          {
            "title": "基本的な機能を覚えよう",
            "child": [
              "ショートカットキーで操作してみよう",
              "検索機能を使ってみよう",
              "置換機能を使ってみよう"
            ]
          }
        ]
      },
      "middle": {
        "description": "Visual Studio Codeはコードを書くだけでなく、開発をサポートするさまざまな機能があります。まずは、デバッグ機能を使えるようになりましょう。つぎに、Vimの操作について学ぶことをオススメします。Vimはターミナル上でテキストを編集するツールで、開発の中で定期的に利用することとなるでしょう。Vimtutorを参考に基本操作を覚えましょう。",
        "tasks": [
          {
            "title": "エディタのデバッグ機能を使ってみよう",
            "child": [
              "VSCode拡張機能のDebugger for Chromeをインストールしよう",
              "ブレークポイントを設定しよう",
              "ステップ実行してみよう",
              "FizzBuzzゲームプログラムのデバッグをしてみよう"
            ]
          },
          {
            "title": "Vimの基本を理解しよう",
            "child": [
              "カーソルを移動しよう",
              "Vimの起動と終了の方法を知ろう",
              "テキスト編集できるようになろう"
            ]
          }
        ]
      }
    }
  },
  {
    "first": "first","id":
  "internet",
    "title": "インターネット",
    "subTitle": "最初最初最初最初最初最初最初最初最初最初32423423423423最初最初最初",
    "description": "最初最初最初最初最初最初最初最初最初最初32423423423423最初最初最初、全てのWebページでHTMLとCSSは使われています。あなたの頭の中にある考えを表現したり発信したりする手段を手に入れましょう。",
    "thumbnail": "../images/skills/html-and-css/thumbnail.png",
    "overview": "最初最初最初最初最初最初最初最初最初最初32423423423423最初最初最初。<br><br>HTMLやCSSが書かれたファイルをWebサーバー上に置くことで、全世界の人にWebページを公開することができます。<br><br>HTMLはWebページに表示する文字や画像などの内容とそれらの構造を指定する役割があり、さまざまな<span data-type='term'>タグ</span>を使用して記述します。<br><br>CSSは色やレイアウトなど見た目を装飾する役割があり、HTMLで記述した要素に対して<span data-type='term'>プロパティ</span>で見た目を指定します。",
    "image": "../images/skills/internet/illustration.svg",
    "purpose": "Webページを作れるようになるには、インターネットとWebの仕組みを理解する必要があります。<br><br>Webページの公開にはサーバーの準備やドメインの取得、HTMLファイルの配置などが必要です。これらの役割や働きを理解するにはインターネットの基本的な知識が必要となります。まずはHTTP通信やIPアドレス、ドメイン名などについて学びましょう。<br><br>ユーザーがWebページにアクセスするとき、必ずインターネットを経由します。インターネットについて学んでWebの仕組みを理解し、Webページを公開できるようになりましょう。",
    "sceneId": "web-basics",
    "getStarted": {
      "easy": {
        "description": "インターネットの知識はHTMLやCSSのように手を動かして学べるものではないので、学習しづらいと感じるかもしれません。まずは登場する頻度が高い用語と役割を学んで全体像を掴みましょう。",
        "tasks": [
          {
            "title": "インターネットの基本を理解しよう",
            "child": [
              "クライアントとサーバーについて学ぼう",
              "URLの役割について学ぼう",
              "リクエストとレスポンスの流れを掴もう",
              "IPアドレスについて学ぼう",
              "URLとIPアドレスの関係とDNSを理解しよう"
            ]
          }
        ]
      },
      "middle": {
        "description": "ここでは、仕組みを学んでいきましょう。特にHTTPの基本はWeb開発者のスキルの土台となるので、早めに押さえておきましょう。",
        "tasks": [
          {
            "title": "HTTPの基本について理解しよう",
            "child": [
              "プロトコルとは何かを知ろう",
              "HTTPメッセージについて学ぼう",
              "ステートレスについて学ぼう",
              "Cookieについて学ぼう"
            ]
          },
          {
            "title": "GitHub PagesにWebページを公開しよう",
            "child": [
              "GitHub Pagesに公開してみよう",
              "カスタムドメインを取得してみよう",
              "404ページを設定してみよう"
            ]
          }
        ]
      }
    }
  },
  {
    "first": "first","id":
  "javascript",
    "title": "JavaScript",
    "subTitle": "最初最初最初最初最初最初最初最初最初最初32423423423423最初最初最初",
    "description": "最初最初最初最初最初最初最初最初最初最初32423423423423最初最初最初、全てのWebページでHTMLとCSSは使われています。あなたの頭の中にある考えを表現したり発信したりする手段を手に入れましょう。",
    "thumbnail": "../images/skills/html-and-css/thumbnail.png",
    "overview": "最初最初最初最初最初最初最初最初最初最初32423423423423最初最初最初。<br><br>HTMLやCSSが書かれたファイルをWebサーバー上に置くことで、全世界の人にWebページを公開することができます。<br><br>HTMLはWebページに表示する文字や画像などの内容とそれらの構造を指定する役割があり、さまざまな<span data-type='term'>タグ</span>を使用して記述します。<br><br>CSSは色やレイアウトなど見た目を装飾する役割があり、HTMLで記述した要素に対して<span data-type='term'>プロパティ</span>で見た目を指定します。",
    "image": "../images/skills/javascript/illustration.svg",
    "purpose": "JavaScriptを使ってWebページに動的な表現を取り入れることで、ユーザーに操作した感覚を与えることや、ローディング中の待ち時間を退屈にさせないことが可能になります。このような仕掛けにより、Webページを利用するユーザーに「楽しく・心地よい」体験を提供できます。<br><br>また、JavaScriptで作られたフロントエンド用のライブラリやフレームワークも登場しており、代表的なものに<span data-type='term'>React</span>、<span data-type='term'>Vue</span>、<span data-type='term'>Angular</span>などがあります。<br><br>このように、楽しさや利便性を備えたWebページを作るうえではJavaScriptは欠かせない言語となっています。<br><br>Webフロントエンド開発で高機能なWebページを作りたい場合は、JavaScriptを学ぶとよいでしょう。",
    "sceneId": "web-basics",
    "getStarted": {
      "easy": {
        "description": "ここでは、JavaScriptでWebページに動きを付けることを目標に学んでいきましょう。まずは、基本文法を押さえてからDOM操作にチャレンジしてみましょう。",
        "tasks": [
          {
            "title": "JavaScriptの基本を理解しよう",
            "child": [
              "基本的な構文を覚えよう",
              "FizzBuzzプログラムを作ってみよう"
            ]
          },
          {
            "title": "DOMの基本について理解しよう",
            "child": [
              "WebページでJavaScriptを実行してみよう",
              "JavaScriptでHTMLを操作してみよう",
              "JavaScriptでCSSを操作してみよう",
              "イベント処理を作ってみよう"
            ]
          },
          {
            "title": "動きのあるWebページを作ってみよう",
            "child": [
              "モーダルを作ってみよう",
              "アコーディオンを作ってみよう",
              "カルーセルを作ってみよう"
            ]
          }
        ]
      },
      "middle": {
        "description": "非同期の学習は少し難易度が高いですが、Web APIの利用など実践では必ず登場します。最初は実行順序などから丁寧に学んでいきましょう。",
        "tasks": [
          {
            "title": "非同期処理を理解しよう",
            "child": [
              "非同期処理に触れてみよう",
              "コールバック関数を使おう",
              "Promiseを使ってみよう",
              "Async/Awaitを使ってみよう"
            ]
          },
          {
            "title": "Ajax利用してみよう",
            "child": [
              "FetchでWeb APIを呼び出してみよう",
              "Ajaxで取得したデータをWebページに表示しよう"
            ]
          }
        ]
      }
    }
  },
  {
    "first": "first","id":
  "developer-tools",
    "title": "開発者ツール",
    "subTitle": "最初最初最初最初最初最初最初最初最初最初32423423423423最初最初最初",
    "description": "最初最初最初最初最初最初最初最初最初最初32423423423423最初最初最初、全てのWebページでHTMLとCSSは使われています。あなたの頭の中にある考えを表現したり発信したりする手段を手に入れましょう。",
    "thumbnail": "../images/skills/html-and-css/thumbnail.png",
    "overview": "最初最初最初最初最初最初最初最初最初最初32423423423423最初最初最初。<br><br>HTMLやCSSが書かれたファイルをWebサーバー上に置くことで、全世界の人にWebページを公開することができます。<br><br>HTMLはWebページに表示する文字や画像などの内容とそれらの構造を指定する役割があり、さまざまな<span data-type='term'>タグ</span>を使用して記述します。<br><br>CSSは色やレイアウトなど見た目を装飾する役割があり、HTMLで記述した要素に対して<span data-type='term'>プロパティ</span>で見た目を指定します。",
    "image": "../images/skills/developer-tools/illustration.svg",
    "purpose": "Webページを作っていると、レイアウトが崩れたり、JavaScriptが思うように動かなかったりなどの不具合が発生することがあります。それらを修正するには、原因となるコードを特定しなければなりません。開発者ツールを使用すれば、Webページと同時にHTMLの構造やJavaScriptのエラー、レスポンシブ表示などを確認できるため、不具合の発見と原因の調査を進めやすくなります。開発者ツールの使い方を学んで、自分で原因を見つけて解決できるようになりましょう。",
    "sceneId": "web-basics",
    "getStarted": {
      "easy": {
        "description": "ここでは、近年もっとも普及しているGoogle Chromeブラウザの開発者ツールを紹介しています。まずは、手軽に使えてWebページ開発に役立つHTMLとCSSの機能を学びましょう。",
        "tasks": [
          {
            "title": "開発者ツールに触れてみよう",
            "child": [
              "ページのHTMLを確認しよう",
              "HTMLを編集しよう",
              "ページのCSSを確認しよう",
              "CSSを編集しよう",
              "CSSを追加しよう"
            ]
          }
        ]
      },
      "middle": {
        "description": "ここでは、より実践で使う開発者ツールの機能について学びましょう。機能ごとにドキュメントやブログなどを調べてみましょう。",
        "tasks": [
          {
            "title": "開発者ツールの基本的な機能について理解しよう",
            "child": [
              "レスポンシブのレイアウトを確認してみよう",
              "HTMLに読み込まれているファイルを確認してみよう",
              "JavaScriptの実行状況を確認してみよう",
              "ストレージを確認してみよう",
              "キャッシュを無効にしてみよう"
            ]
          }
        ]
      }
    }
  },
  {
    "first": "first","id":
  "server-side-programming",
    "title": "サーバーサイドプログラミング",
    "subTitle": "最初最初最初最初最初最初最初最初最初最初32423423423423最初最初最初",
    "description": "最初最初最初最初最初最初最初最初最初最初32423423423423最初最初最初、全てのWebページでHTMLとCSSは使われています。あなたの頭の中にある考えを表現したり発信したりする手段を手に入れましょう。",
    "thumbnail": "../images/skills/html-and-css/thumbnail.png",
    "overview": "最初最初最初最初最初最初最初最初最初最初32423423423423最初最初最初。<br><br>HTMLやCSSが書かれたファイルをWebサーバー上に置くことで、全世界の人にWebページを公開することができます。<br><br>HTMLはWebページに表示する文字や画像などの内容とそれらの構造を指定する役割があり、さまざまな<span data-type='term'>タグ</span>を使用して記述します。<br><br>CSSは色やレイアウトなど見た目を装飾する役割があり、HTMLで記述した要素に対して<span data-type='term'>プロパティ</span>で見た目を指定します。",
    "image": "../images/skills/server-side-programming/illustration.svg",
    "purpose": "動画サービスやECサイトなど、世界中で使われているWebアプリケーションは、いずれかのサーバーサイドのプログラミング言語を用いて作られています。<br><br>HTML、CSS、JavaScriptだけでは、いつ誰がアクセスしても同じ表示となる静的なWebページしか作れませんでした。サーバーサイドのプログラミング言語を学ぶことで、ユーザーのリクエストに応じた動的なWebページを作れるようになります。<br><br>本格的なWebアプリケーションの作成のために、サーバーサイドの言語を学びましょう。",
    "sceneId": "web-application-development",
    "getStarted": {
      "easy": {
        "description": "ここではRubyの学習方法を紹介しています。Rubyはオープンソースのスクリプト言語であり、Webアプリケーション開発でよく使われる人気の言語です。1つの言語をしっかりと学べば、他のプログラミング言語を学ぶときにも役立つスキルが身につきます。まずはRubyでプログラミングの基礎を身に着けましょう。",
        "tasks": [
          {
            "title": "Rubyを動かしてみよう",
            "child": [
              "変数を使ってみよう",
              "条件分岐をしてみよう",
              "繰り返し処理を作ってみよう"
            ]
          },
          {
            "title": "Rubyの基本を理解しよう",
            "child": [
              "配列を使ってみよう",
              "ハッシュを使ってみよう",
              "nilを扱ってみよう",
              "メソッドを使ってみよう",
              "FizzBuzzプログラムを作ってみよう"
            ]
          }
        ]
      },
      "middle": {
        "description": "Rubyは繰り返しや条件分岐など以外にもさまざまな機能を作ることができます。ここではより実践的にRubyを使いこなすためのスキルを学んでいきましょう。",
        "tasks": [
          {
            "title": "Rubyを使えるようになろう",
            "child": [
              "rbenvでRubyをインストールしよう",
              "正規表現を扱ってみよう",
              "例外処理を加えよう",
              "Rubyのデバッグをしよう",
              "正規表現チェッカープログラムを作ってみよう"
            ]
          },
          {
            "title": "Rubyのテクニックを身に着けよう",
            "child": [
              "日付や時刻を扱えるようになろう",
              "ファイルやディレクトリを扱えるようになろう",
              "環境変数を扱えるようになろう",
              "gemとBundlerについて理解しよう"
            ]
          }
        ]
      }
    }
  },
  {
    "first": "first","id":
  "object-oriented-programming",
    "title": "オブジェクト指向",
    "subTitle": "最初最初最初最初最初最初最初最初最初最初32423423423423最初最初最初",
    "description": "最初最初最初最初最初最初最初最初最初最初32423423423423最初最初最初、全てのWebページでHTMLとCSSは使われています。あなたの頭の中にある考えを表現したり発信したりする手段を手に入れましょう。",
    "thumbnail": "../images/skills/html-and-css/thumbnail.png",
    "overview": "最初最初最初最初最初最初最初最初最初最初32423423423423最初最初最初。<br><br>HTMLやCSSが書かれたファイルをWebサーバー上に置くことで、全世界の人にWebページを公開することができます。<br><br>HTMLはWebページに表示する文字や画像などの内容とそれらの構造を指定する役割があり、さまざまな<span data-type='term'>タグ</span>を使用して記述します。<br><br>CSSは色やレイアウトなど見た目を装飾する役割があり、HTMLで記述した要素に対して<span data-type='term'>プロパティ</span>で見た目を指定します。",
    "image": "../images/skills/object-oriented-programming/illustration.svg",
    "purpose": "オブジェクト指向を学ぶことで、作りたい機能をどのようにプログラミングすると良いかをイメージできるようになります。<br><br>オブジェクト指向の考え方に沿ってプログラムを構成することで、オブジェクト間の<span data-type='term'>独立性</span>や<span data-type='term'>拡張性</span>、<span data-type='term'>再利用性</span>が高まり、機能追加や修正が容易になります。<br><br>例えば、オブジェクトの振る舞いに変更が必要な場合、それがある単一のクラスの内部に閉じた独立性の高いものであれば、他のクラスで作られたオブジェクトに影響を与えずに修正することができます。<br><br>オブジェクト指向を学んで、メンテナンスしやすいプログラムを書けるようになりましょう。",
    "sceneId": "web-application-development",
    "getStarted": {
      "easy": {
        "description": "オブジェクト指向とプログラミング言語は切り離せない関係です。まずはRubyを使ってオブジェクト指向のクラスやインスタンスについてイメージできるようになりましょう。",
        "tasks": [
          {
            "title": "オブジェクト指向に触れてみよう",
            "child": [
              "クラスを作ってみよう",
              "インスタンスと初期化について学ぼう",
              "インスタンス変数を作ってみよう",
              "インスタンスメソッドを作ってみよう",
              "継承を使ってみよう",
              "料理注文システムを作ろう"
            ]
          }
        ]
      },
      "middle": {
        "description": "オブジェクト指向の考え方やテクニックを習得するには実践を繰り返す必要があります。ブラックジャックゲームを作ることを目標に、書籍と実践から学んでいきましょう。",
        "tasks": [
          {
            "title": "オブジェクト指向の基本を理解しよう",
            "child": [
              "カプセル化について学ぼう",
              "ポリモーフィズムについて学ぼう",
              "集約と移譲について学ぼう",
              "クラス設計とUMLについて学ぼう",
              "ブラックジャックゲームを作ってみよう"
            ]
          }
        ]
      }
    }
  },
  {
    "first": "first","id":
  "terminal-operations",
    "title": "ターミナル操作",
    "subTitle": "最初最初最初最初最初最初最初最初最初最初32423423423423最初最初最初",
    "description": "最初最初最初最初最初最初最初最初最初最初32423423423423最初最初最初、全てのWebページでHTMLとCSSは使われています。あなたの頭の中にある考えを表現したり発信したりする手段を手に入れましょう。",
    "thumbnail": "../images/skills/html-and-css/thumbnail.png",
    "overview": "最初最初最初最初最初最初最初最初最初最初32423423423423最初最初最初。<br><br>HTMLやCSSが書かれたファイルをWebサーバー上に置くことで、全世界の人にWebページを公開することができます。<br><br>HTMLはWebページに表示する文字や画像などの内容とそれらの構造を指定する役割があり、さまざまな<span data-type='term'>タグ</span>を使用して記述します。<br><br>CSSは色やレイアウトなど見た目を装飾する役割があり、HTMLで記述した要素に対して<span data-type='term'>プロパティ</span>で見た目を指定します。",
    "image": "../images/skills/terminal-operations/illustration.svg",
    "purpose": "ターミナルを利用することで効率的にコンピューターを操作することができます。<br><br>Webアプリケーション開発では、ライブラリのインストールやデータベースの操作などを行いますが、これらの作業はターミナル上でのCUI操作が基本です。<br><br>GUI操作でもほとんどの操作は可能ですが、CUI操作であればショートカットキーや入力補完を使えるため、より効率的に操作できます。<br><br>また、アプリケーションを公開するためのサーバーにはLinux系のOSが幅広く利用されているので、Linuxコマンドについても学習が必要です。OSやアプリケーションの環境設定や確認作業といった、ほぼ全ての作業をターミナルで行うことになります。<br><br>ターミナル操作について学んで、効率よく作業できるようになりましょう。",
    "sceneId": "web-application-development",
    "getStarted": {
      "easy": {
        "description": "ターミナル操作はLinux系のOSを中心に紹介しています。まずは、ターミナル操作を通してファイルやフォルダの構造についてイメージできるようになりましょう。",
        "tasks": [
          {
            "title": "ターミナル操作の基礎について学んでみよう",
            "child": [
              "ターミナルに触れてみよう",
              "ファイル構造を理解しよう",
              "ファイル・ディレクトリを操作しよう"
            ]
          }
        ]
      },
      "middle": {
        "description": "ターミナル操作を学習するには実際にLinux OSを使うことが効率的です。自分のPCでLinuxを使えるようにして、より実践的なターミナル操作にチャレンジしてみましょう。",
        "tasks": [
          {
            "title": "Linux OSについて学んでみよう",
            "child": [
              "Linux OSとディストリビューションについて理解しよう",
              "CentOSをインストールしてみよう",
              "ファイルパーミッションとスーパーユーザーについて学ぼう",
              "標準入出力とパイプラインについて学ぼう",
              "RPMのパッケージ管理について学ぼう",
              "ファイルシステム（マウント）について学ぼう"
            ]
          },
          {
            "title": "ターミナルを実践で使えるようになろう",
            "child": [
              "プロセスとジョブについて学ぼう",
              "メモリ状態のチェックについて学ぼう",
              "SSHでリモートサーバーに接続しよう",
              "シェルスクリプトを作成してスケジュール起動しよう"
            ]
          }
        ]
      }
    }
  },
  {
    "first": "first","id":
  "databases",
    "title": "データベース",
    "subTitle": "最初最初最初最初最初最初最初最初最初最初32423423423423最初最初最初",
    "description": "最初最初最初最初最初最初最初最初最初最初32423423423423最初最初最初、全てのWebページでHTMLとCSSは使われています。あなたの頭の中にある考えを表現したり発信したりする手段を手に入れましょう。",
    "thumbnail": "../images/skills/html-and-css/thumbnail.png",
    "overview": "最初最初最初最初最初最初最初最初最初最初32423423423423最初最初最初。<br><br>HTMLやCSSが書かれたファイルをWebサーバー上に置くことで、全世界の人にWebページを公開することができます。<br><br>HTMLはWebページに表示する文字や画像などの内容とそれらの構造を指定する役割があり、さまざまな<span data-type='term'>タグ</span>を使用して記述します。<br><br>CSSは色やレイアウトなど見た目を装飾する役割があり、HTMLで記述した要素に対して<span data-type='term'>プロパティ</span>で見た目を指定します。",
    "image": "../images/skills/databases/illustration.svg",
    "purpose": "データベースについて学ぶことで、Webアプリケーションで扱うデータを正しく管理できるようになります。<br><br>Webアプリケーションで扱うデータは、会員登録時のユーザーデータやECサイトの商品データなど膨大です。データベースを使うことで、関連しあうデータを一括で保存し、その中から目的のデータを素早く検索して表示することが可能となります。<br><br>また、データベースは複数のユーザーの同時利用によるデータの消失や重複などを防止でき、整合性を保つことができます。データの暗号化によるセキュリティ向上やバックアップ機能などによりデータの保全も可能です。<br><br>近年のWebアプリケーションフレームワークを使えば、直接SQLを使わずにO/Rマッパーで実装することも可能です。ただし、このマッパー内部ではSQLが動いているので、効率的なデータアクセスを実現するためにSQLの学習も必要となるでしょう。<br><br>本格的なサービスを作るために、データベースについて学びましょう。",
    "sceneId": "web-application-development",
    "getStarted": {
      "easy": {
        "description": "データベースの最初の学習は、現在広く使われているリレーショナルデータベースから行うのがよいでしょう。まずは、リレーショナルデータベースを操作するためのSQLについて学びましょう。",
        "tasks": [
          {
            "title": "SQLでデータ取得をしてみよう",
            "child": [
              "データベースの種類と役割について理解しよう",
              "SELECTを使ってデータを取得しよう",
              "WHEREを使って特定のデータを取得しよう",
              "データの並べ替えをしてみよう",
              "集計関数を使ってみよう",
              "データをグループ化してみよう",
              "サブクエリを使ってみよう",
              "JOINで複数テーブルを結合しよう",
              "ファッションサイトのデータベースの分析をしてみよう"
            ]
          },
          {
            "title": "SQLでデータ変更をしてみよう",
            "child": [
              "INSERTでデータを追加してみよう",
              "UPDATEでデータを更新してみよう",
              "DELETEでデータを削除してみよう"
            ]
          }
        ]
      },
      "middle": {
        "description": "MySQLはリレーショナルデータベースの中でも最も多く使用されているデータベースの1つです。ここでは、データベースを実践で使うためにMySQLの基本について学びます。",
        "tasks": [
          {
            "title": "MySQLの基本を理解しよう",
            "child": [
              "MySQLをインストールしよう",
              "データベースとテーブルを管理してみよう",
              "データ型について学ぼう",
              "制約を使ってデータの整合性を保とう",
              "データのインポートとエクスポートをしてみよう",
              "COMMITとROLLBACKを使用してトランザクションを管理しよう",
              "バックアップとリストアを試してみよう",
              "インデックスを使用してデータ取得をすばやく行おう"
            ]
          },
          {
            "title": "図書館アプリケーションのデータベース設計をしてみよう",
            "child": [
              "機能に必要なテーブルを洗い出し必要なカラムを定義しよう",
              "重複した項目を整理し、必要なキーやインデックスの定義をしよう",
              "ER図を作り各テーブル間の関係など全体を調整しよう"
            ]
          }
        ]
      }
    }
  },
  {
    "first": "first","id":
  "web-application-frameworks",
    "title": "Webアプリケーションフレームワーク",
    "subTitle": "最初最初最初最初最初最初最初最初最初最初32423423423423最初最初最初",
    "description": "最初最初最初最初最初最初最初最初最初最初32423423423423最初最初最初、全てのWebページでHTMLとCSSは使われています。あなたの頭の中にある考えを表現したり発信したりする手段を手に入れましょう。",
    "thumbnail": "../images/skills/html-and-css/thumbnail.png",
    "overview": "最初最初最初最初最初最初最初最初最初最初32423423423423最初最初最初。<br><br>HTMLやCSSが書かれたファイルをWebサーバー上に置くことで、全世界の人にWebページを公開することができます。<br><br>HTMLはWebページに表示する文字や画像などの内容とそれらの構造を指定する役割があり、さまざまな<span data-type='term'>タグ</span>を使用して記述します。<br><br>CSSは色やレイアウトなど見た目を装飾する役割があり、HTMLで記述した要素に対して<span data-type='term'>プロパティ</span>で見た目を指定します。",
    "image": "../images/skills/web-application-frameworks/illustration.svg",
    "purpose": "フレームワークを取り入れることで手軽にWebアプリケーションを開発できるようになります。<br><br>世の中のWebアプリケーションの多くはフレームワークを使って作られています。本格的なWeb開発をする場合、フレームワークの知識は必須でしょう。<br><br>フレームワークを使えば、用意されたルールやテンプレートに沿って開発できるため、作業効率が向上します。またフォルダ構造についても用意されたものを使えるため、プログラムの分割に迷うことが少なくなります。<br><br>フレームワークを利用して、Webアプリケーションの基本的な動作や仕組みについて学びましょう。",
    "sceneId": "web-application-development",
    "getStarted": {
      "easy": {
        "description": "RailsはRubyでWebアプリケーションを開発するときに、もっとも使われているフレームワークです。豊富な機能や開発におけるコード量の少なさが特徴です。まずは、Railsを使って簡単なSNSアプリを作ってみましょう。",
        "tasks": [
          {
            "title": "Ruby on Railsを使ってみよう",
            "child": [
              "Webページを表示してみよう",
              "ビューについて理解しよう",
              "コントローラーについて理解しよう",
              "ルーティングについて理解しよう",
              "データベースを利用しよう",
              "モデルについて理解しよう"
            ]
          },
          {
            "title": "SNSアプリを作ってみよう",
            "child": [
              "画像アップロード機能を作ってみよう",
              "ログイン機能を作ってみよう",
              "いいね機能を作ってみよう"
            ]
          }
        ]
      },
      "middle": {
        "description": "ここでは、一般的な機能を備えたオリジナルWebアプリケーションの完成を目標にして学んでいきましょう。機能を考えるときは、すでに世の中にあるものを参考にするのがオススメです。",
        "tasks": [
          {
            "title": "オリジナルWebアプリケーションを作ってみよう",
            "child": [
              "Railsをインストールしよう",
              "MySQLと接続してみよう",
              "deviceを使ってログイン機能を作ってみよう",
              "omniauthを使ってGitHubログイン機能を作ってみよう",
              "Active Storageを使って画像アップロード機能を作ってみよう",
              "ユーザーフォロー機能を作ってみよう",
              "コメント機能を作ってみよう",
              "Herokuにアプリケーションをデプロイしよう"
            ]
          }
        ]
      }
    }
  },
  {
    "first": "first","id":
  "web-api",
    "title": "Web API",
    "subTitle": "最初最初最初最初最初最初最初最初最初最初32423423423423最初最初最初",
    "description": "最初最初最初最初最初最初最初最初最初最初32423423423423最初最初最初、全てのWebページでHTMLとCSSは使われています。あなたの頭の中にある考えを表現したり発信したりする手段を手に入れましょう。",
    "thumbnail": "../images/skills/html-and-css/thumbnail.png",
    "overview": "最初最初最初最初最初最初最初最初最初最初32423423423423最初最初最初。<br><br>HTMLやCSSが書かれたファイルをWebサーバー上に置くことで、全世界の人にWebページを公開することができます。<br><br>HTMLはWebページに表示する文字や画像などの内容とそれらの構造を指定する役割があり、さまざまな<span data-type='term'>タグ</span>を使用して記述します。<br><br>CSSは色やレイアウトなど見た目を装飾する役割があり、HTMLで記述した要素に対して<span data-type='term'>プロパティ</span>で見た目を指定します。",
    "image": "../images/skills/web-api/illustration.svg",
    "purpose": "既に公開されたWeb APIサービスがあれば、それを利用することでアプリケーションのオリジナルの機能開発に注力できます。<br><br>これまでは、ログイン機能やメール送信機能などアプリケーションのさまざまな機能を自身で作る必要がありました。しかしWeb APIを利用すると、これらの機能を簡単にアプリケーションに取り込むことが可能です。<br><br>他にも現在では、Web APIを利用してモダンなユーザーインタフェースなどを実現しているWebサイトが多くあります。たとえば、地図表示部分では非同期にWeb APIを呼び出す<span data-type='term'>Ajax</span>という方式を使うことで、スムーズな操作を可能にしています。<br><br>公開されているAPIを積極的に活用して、さまざまなWebアプリケーションを効率的に開発しましょう。",
    "sceneId": "web-application-development",
    "getStarted": {
      "easy": {
        "description": "Web APIを活用して自分のアプリケーションに機能を追加してみましょう。まずは、無料のデータを使ってWeb APIのイメージを掴みましょう。",
        "tasks": [
          {
            "title": "Web APIを使ってみよう",
            "child": [
              "Web APIの仕組みを理解しよう",
              "Ajaxを使ってWeb APIにアクセスしてみよう",
              "JSONを扱えるようになろう",
              "Ajaxで取得したデータをWebページに表示しよう",
              "net/httpを使ってRubyからWeb APIにアクセスしてみよう",
              "サードパーティAPIを使ってデータを自分のWebアプリに表示してみよう"
            ]
          }
        ]
      },
      "middle": {
        "description": "実践では、Web APIを利用するだけでなく設計して使ってもらう場面が多くあります。ここでは、Web APIを自分で作ることを目標に学習していきましょう。",
        "tasks": [
          {
            "title": "オリジナルWebアプリケーションをWeb API化してみよう",
            "child": [
              "RESTの考え方を知ろう",
              "ユーザーリストのJSONを返すAPIを作ってみよう",
              "ユーザー追加のAPIを作ってみよう",
              "ログイン機能のAPIを作ってみよう"
            ]
          }
        ]
      }
    }
  },
  {
    "first": "first","id":
  "development-flow",
    "title": "開発フロー",
    "subTitle": "最初最初最初最初最初最初最初最初最初最初32423423423423最初最初最初",
    "description": "最初最初最初最初最初最初最初最初最初最初32423423423423最初最初最初、全てのWebページでHTMLとCSSは使われています。あなたの頭の中にある考えを表現したり発信したりする手段を手に入れましょう。",
    "thumbnail": "../images/skills/html-and-css/thumbnail.png",
    "overview": "最初最初最初最初最初最初最初最初最初最初32423423423423最初最初最初。<br><br>HTMLやCSSが書かれたファイルをWebサーバー上に置くことで、全世界の人にWebページを公開することができます。<br><br>HTMLはWebページに表示する文字や画像などの内容とそれらの構造を指定する役割があり、さまざまな<span data-type='term'>タグ</span>を使用して記述します。<br><br>CSSは色やレイアウトなど見た目を装飾する役割があり、HTMLで記述した要素に対して<span data-type='term'>プロパティ</span>で見た目を指定します。",
    "image": "../images/skills/development-flow/illustration.svg",
    "purpose": "開発フローを学ぶと、チーム開発を効率的に進められるようになります。<br><br>開発に着手する前に開発フローとスケジュールについてチーム内で共有できていれば、認識を合わせながら作業を進められるようになります。例えば、協力して作業するときの段取りがスムーズになることや、問題が発生したときのフォローがしやすくなることなどが挙げられます。<br><br>開発フローについて学んで、チーム開発にチャレンジするための準備をしましょう。",
    "sceneId": "team-development",
    "getStarted": {
      "easy": {
        "description": "ここでは、アジャイル開発の基本について学びます。近年では、市場の変化に対応しやすくするために、アジャイル開発を取り入れることが多くなっています。まずは、個人開発でタスク管理などを体験し、開発フローのイメージを掴みましょう。",
        "tasks": [
          {
            "title": "アジャイル開発の基本について理解しよう",
            "child": [
              "アジャイル開発の目的について知ろう",
              "アジャイルな計画作りについて知ろう",
              "イテレーションの進め方について知ろう"
            ]
          },
          {
            "title": "個人開発で開発フローを体験してみよう",
            "child": [
              "GitHubのイシューにタスクを追加しよう",
              "GitHubにカンバン方式のプロジェクトボードを追加しよう",
              "プロジェクトボードでイシューを管理しよう",
              "Gitでブランチを作成してイシューに取り組もう",
              "メインブランチにプルリクエストを上げよう",
              "コードをセルフレビューしてみよう",
              "コードのレビュー指摘に対応しよう"
            ]
          }
        ]
      },
      "middle": {
        "description": "チーム開発は複数人いないと体験できないため、個人で学ぶことが難しいスキルの1つです。可能であれば、仲間を見つけて一緒に開発をしてみましょう。",
        "tasks": [
          {
            "title": "チーム開発に積極的に進めよう",
            "child": [
              "リリースや運用までの全タスクの洗い出しをチームで行おう",
              "ガントチャートに作業のスケジュールをまとめよう",
              "作成や管理すべきドキュメント類を一覧にまとめよう",
              "チーム内でタスクアサインを調整しよう",
              "担当タスクの作業計画を立てよう",
              "担当タスクを詳細化して段取りを決めよう"
            ]
          }
        ]
      }
    }
  },
  {
    "first": "first","id":
  "design-specification",
    "title": "仕様と設計",
    "subTitle": "最初最初最初最初最初最初最初最初最初最初32423423423423最初最初最初",
    "description": "最初最初最初最初最初最初最初最初最初最初32423423423423最初最初最初、全てのWebページでHTMLとCSSは使われています。あなたの頭の中にある考えを表現したり発信したりする手段を手に入れましょう。",
    "thumbnail": "../images/skills/html-and-css/thumbnail.png",
    "overview": "最初最初最初最初最初最初最初最初最初最初32423423423423最初最初最初。<br><br>HTMLやCSSが書かれたファイルをWebサーバー上に置くことで、全世界の人にWebページを公開することができます。<br><br>HTMLはWebページに表示する文字や画像などの内容とそれらの構造を指定する役割があり、さまざまな<span data-type='term'>タグ</span>を使用して記述します。<br><br>CSSは色やレイアウトなど見た目を装飾する役割があり、HTMLで記述した要素に対して<span data-type='term'>プロパティ</span>で見た目を指定します。",
    "image": "../images/skills/design-specification/illustration.svg",
    "purpose": "仕様をチームで共有できていると、ユーザーがどんな風にアプリケーションを利用する想定なのかを、各メンバーがイメージできるようなります。<br><br>さらに設計もできていれば、機能とその実現方法に認識のズレを生むことがなく、手戻りを抑えながら作業を進めることができるようになるでしょう。<br><br>一方、手戻りが多発すると、アプリケーションが完成しない可能性もありえます。そうならないためにも、仕様で決めるべきものや、設計するべきものについて学びましょう。",
    "sceneId": "team-development",
    "getStarted": {
      "easy": {
        "description": "ここでは、Figmaというデザインツールを使ってWebページの画面遷移図を作ることを目標に学んでいきましょう。最初はページ構成や大枠のレイアウトを整理することを意識するのがおすすめです。",
        "tasks": [
          {
            "title": "Webページの画面遷移図を作ってみよう",
            "child": [
              "Webページに必要な要素や機能を決めよう",
              "Webページの構成を決めよう",
              "各ページのレイアウトを決めよう",
              "Figmaを使って画面遷移図を作ってみよう"
            ]
          }
        ]
      },
      "middle": {
        "description": "ここでは、ソフトウェアの設計とデータベースの設計を中心に学んでいきます。設計のスキルは実際に開発の経験を積むことも重要ですが、設計の目的や考え方については書籍から学ぶことができます。オリジナルのWebアプリケーションをいくつか開発したあとにチャレンジしてみましょう。",
        "tasks": [
          {
            "title": "ソフトウェア設計の基本を理解しよう",
            "child": [
              "設計の目的について学ぼう",
              "SOLID原則について学ぼう",
              "コンポーネントの原則について学ぼう",
              "アーキテクチャについて学ぼう",
              "オリジナルWebアプリのユースケース図を作ってみよう",
              "オリジナルWebアプリのクラス図・シーケンス図を作ってみよう"
            ]
          },
          {
            "title": "図書館アプリケーションを作成しよう",
            "child": [
              "図書館アプリを使う人の役割を洗い出そう",
              "書籍の貸出など、図書館アプリに必要な機能を考えてみよう",
              "機能を実現するためのER図を作ってみよう"
            ]
          }
        ]
      }
    }
  },
  {
    "first": "first","id":
  "git",
    "title": "Git",
    "subTitle": "最初最初最初最初最初最初最初最初最初最初32423423423423最初最初最初",
    "description": "最初最初最初最初最初最初最初最初最初最初32423423423423最初最初最初、全てのWebページでHTMLとCSSは使われています。あなたの頭の中にある考えを表現したり発信したりする手段を手に入れましょう。",
    "thumbnail": "../images/skills/html-and-css/thumbnail.png",
    "overview": "最初最初最初最初最初最初最初最初最初最初32423423423423最初最初最初。<br><br>HTMLやCSSが書かれたファイルをWebサーバー上に置くことで、全世界の人にWebページを公開することができます。<br><br>HTMLはWebページに表示する文字や画像などの内容とそれらの構造を指定する役割があり、さまざまな<span data-type='term'>タグ</span>を使用して記述します。<br><br>CSSは色やレイアウトなど見た目を装飾する役割があり、HTMLで記述した要素に対して<span data-type='term'>プロパティ</span>で見た目を指定します。",
    "image": "../images/skills/git/illustration.svg",
    "purpose": "Gitは開発の効率化や不具合の迅速な修正など、コードをバージョン管理をするメリットは強力なため、多くの現場で使われています。Gitが使われている現場では、Gitが使えないと開発に加われないため、必須のスキルと言えるでしょう。<br><br>新しいメンバーが変更履歴から過去のコードの経緯を確認できたり、他のメンバーの作業状況を把握してフォローをしたりと、チーム開発において応用が効くスキルです。<br><br>GitHubなどのバージョン管理サービスを利用すればコードのレビューなども簡単に行うことができるようになります。<br><br>チーム開発をスムーズに進めるために必須のスキルであるGitについて学んでみましょう。",
    "sceneId": "team-development",
    "getStarted": {
      "easy": {
        "description": "ここではGitの最小限の使い方について学んでいきます。まずは、Gitを動かしながらローカルリポジトリとリモートリポジトリのイメージを掴みましょう。",
        "tasks": [
          {
            "title": "Gitを使ってみよう",
            "child": ["ファイルを共有してみよう", "変更履歴を把握しよう"]
          },
          {
            "title": "GitHubを使ってみよう",
            "child": [
              "Gitのセットアップをしよう",
              "GitHubアカウントを作成しよう",
              "リモートリポジトリを作成しよう",
              "リモートリポジトリにプッシュしてみよう"
            ]
          }
        ]
      },
      "middle": {
        "description": "チーム開発を進めるには、Gitのブランチ機能やGitHubの機能を使いこなす必要があります。ここでは、より実践的にGitのスキルを身につけましょう。",
        "tasks": [
          {
            "title": "Gitのテクニックを身に着けよう",
            "child": [
              "ブランチ機能を使って開発してみよう",
              "コンフリクトに対応してみよう",
              "誤った変更や操作を取り消そう"
            ]
          },
          {
            "title": "GitHubを使って共同開発できるようになろう",
            "child": [
              "イシュー機能を使ってみよう",
              "ブランチを作成してみよう",
              "ファイルをコミットしよう",
              "プルリクエストを送ってみよう",
              "レビューに対応しよう",
              "プルリクエストをマージしよう"
            ]
          }
        ]
      }
    }
  },
  {
    "first": "first","id":
  "testing",
    "title": "テスト",
    "subTitle": "最初最初最初最初最初最初最初最初最初最初32423423423423最初最初最初",
    "description": "最初最初最初最初最初最初最初最初最初最初32423423423423最初最初最初、全てのWebページでHTMLとCSSは使われています。あなたの頭の中にある考えを表現したり発信したりする手段を手に入れましょう。",
    "thumbnail": "../images/skills/html-and-css/thumbnail.png",
    "overview": "最初最初最初最初最初最初最初最初最初最初32423423423423最初最初最初。<br><br>HTMLやCSSが書かれたファイルをWebサーバー上に置くことで、全世界の人にWebページを公開することができます。<br><br>HTMLはWebページに表示する文字や画像などの内容とそれらの構造を指定する役割があり、さまざまな<span data-type='term'>タグ</span>を使用して記述します。<br><br>CSSは色やレイアウトなど見た目を装飾する役割があり、HTMLで記述した要素に対して<span data-type='term'>プロパティ</span>で見た目を指定します。",
    "image": "../images/skills/testing/illustration.svg",
    "purpose": "チーム開発では、異なる開発者のコードが影響してバグが生まれたり、コードの変更によって予期せぬ影響が発生したりすることがあります。<br><br>テストを継続的に実施すると、そのような不具合をすぐに見つけられるようになります。既存のコードに変更を加えるような開発も安心して行えるようになるので、開発のスピードが向上することでしょう。<br><br>また、適切なテストケースの作成方法を学ぶと、不具合を抑えるために開発で注意することを意識できようになります。<br><br>アプリケーションの開発現場では機能追加や変更のたびにテストを行います。自動テストについて是非学んでおきましょう。",
    "sceneId": "team-development",
    "getStarted": {
      "easy": {
        "description": "ここではRubyのテスティングフレームワークであるRSpecを使った単体テストについて学んでいきましょう。RSpecはブログや記事などによる解説やチュートリアルが豊富にあります。まずは、Railsを含めずにRubyに絞って単体テストを学び、自動テストのイメージを掴みましょう。",
        "tasks": [
          {
            "title": "Rubyで単体テストを作ってみよう",
            "child": [
              "RSpecをインストールしよう",
              "describe / it / expect を使ってみよう",
              "複数のテストを作ってみよう",
              "describeでテストをグループ化してみよう",
              "contextで条件別にグループ化してみよう",
              "beforeで共通の前準備を作ってみよう",
              "失敗したテストを修正してみよう",
              "FizzBuzzプログラムのテストを書いてみよう"
            ]
          },
          {
            "title": "テスト駆動開発の基本を理解しよう",
            "child": [
              "仕様のTODOリストを作ってみよう",
              "テストコードを書いて失敗を確認しよう",
              "仮実装を追加してテストを成功にしよう",
              "リファクタリングを行って重複を除去しよう",
              "フィボナッチ数列をテスト駆動開発で作ってみよう"
            ]
          }
        ]
      },
      "middle": {
        "description": "ここでは、RailsのアプリケーションにRSpecでテストを書くスキルについて学びましょう。基本的なテストスキルを身に着けたあとは、システムテストの概要について調べてみましょう。",
        "tasks": [
          {
            "title": "RailsでRSpecを使えるようになろう",
            "child": [
              "RSpecをセットアップしよう",
              "モデルスペックでモデルをテストしよう",
              "テストデータを作成しよう",
              "フィーチャースペックでUIをテストしよう",
              "オリジナルWebアプリのテストを書いてみよう"
            ]
          },
          {
            "title": "システムテストの基本について理解しよう",
            "child": [
              "シナリオテストについて知ろう",
              "負荷テストについて知ろう",
              "セキュリティテストについて知ろう"
            ]
          }
        ]
      }
    }
  },
  {
    "first": "first","id":
  "refactoring",
    "title": "リファクタリング",
    "subTitle": "最初最初最初最初最初最初最初最初最初最初32423423423423最初最初最初",
    "description": "最初最初最初最初最初最初最初最初最初最初32423423423423最初最初最初、全てのWebページでHTMLとCSSは使われています。あなたの頭の中にある考えを表現したり発信したりする手段を手に入れましょう。",
    "thumbnail": "../images/skills/html-and-css/thumbnail.png",
    "overview": "最初最初最初最初最初最初最初最初最初最初32423423423423最初最初最初。<br><br>HTMLやCSSが書かれたファイルをWebサーバー上に置くことで、全世界の人にWebページを公開することができます。<br><br>HTMLはWebページに表示する文字や画像などの内容とそれらの構造を指定する役割があり、さまざまな<span data-type='term'>タグ</span>を使用して記述します。<br><br>CSSは色やレイアウトなど見た目を装飾する役割があり、HTMLで記述した要素に対して<span data-type='term'>プロパティ</span>で見た目を指定します。",
    "image": "../images/skills/refactoring/illustration.svg",
    "purpose": "見通しの良いコードを書く技術は、チーム開発において重要なスキルです。<br><br>初期のプロダクト開発や仕様変更の激しい開発現場では、とりあえず動くものを作ることが優先され、コードの読みやすさは後回しにされやすいです。このような状態が続くとコードの品質が徐々に下がり、既存のコードに影響を与えずに機能を追加することが難しくなります。<br><br>リファクタリングを定期的に行うと、コードが読みやすくなり、バグも発見しやすくなるため、開発コストの削減や長期的な開発速度の向上につながります。<br><br>改善したくても、動いているコードを変更することが怖く、リファクタリングできない開発現場がよくあります。リファクタリング手法についてきちんと学び、恐れずにコードの改善に取り組めるようになりましょう。",
    "sceneId": "team-development",
    "getStarted": {
      "easy": {
        "description": "変数にわかりやすい名前を付けたり、コードを整形したりするだけでも、コードの読みやすさは向上します。まずは、簡単なリファクタリングを学んでイメージを掴みましょう。",
        "tasks": [
          {
            "title": "簡単なリファクタリングを体験してみよう",
            "child": [
              "わかりやすい名前を付けよう",
              "コードを整形しよう",
              "コードにコメントをしよう",
              "ループとロジックをシンプルにしよう",
              "汎用コードを抽出して関数にしよう",
              "FizzBuzzプログラムをリファクタリングしてみよう"
            ]
          }
        ]
      },
      "middle": {
        "description": "「コードの量を減らす」「共通化する」などの表面的なリファクタリングだけでは、長期的にメンテナンスがしやすいコードにはならない可能性があります。ここでは、オブジェクト指向や自動テストを組み合わせた、実践的なリファクタリングについて学んでいきましょう。",
        "tasks": [
          {
            "title": "リファクタリングの基本を理解しよう",
            "child": [
              "リファクタリングの原則について学ぼう",
              "コードの不吉な臭いに気づけるようになろう",
              "モジュールを分離しよう",
              "コンポーネント化できそうな複数関数をクラスにまとめよう",
              "ポリモーフィズムでコードを汎用化しよう",
              "オリジナルWebアプリをリファクタリングしよう"
            ]
          }
        ]
      }
    }
  },
  {
    "first": "first","id":
  "server-configuration",
    "title": "サーバー構成",
    "subTitle": "最初最初最初最初最初最初最初最初最初最初32423423423423最初最初最初",
    "description": "最初最初最初最初最初最初最初最初最初最初32423423423423最初最初最初、全てのWebページでHTMLとCSSは使われています。あなたの頭の中にある考えを表現したり発信したりする手段を手に入れましょう。",
    "thumbnail": "../images/skills/html-and-css/thumbnail.png",
    "overview": "最初最初最初最初最初最初最初最初最初最初32423423423423最初最初最初。<br><br>HTMLやCSSが書かれたファイルをWebサーバー上に置くことで、全世界の人にWebページを公開することができます。<br><br>HTMLはWebページに表示する文字や画像などの内容とそれらの構造を指定する役割があり、さまざまな<span data-type='term'>タグ</span>を使用して記述します。<br><br>CSSは色やレイアウトなど見た目を装飾する役割があり、HTMLで記述した要素に対して<span data-type='term'>プロパティ</span>で見た目を指定します。",
    "image": "../images/skills/server-configuration/illustration.svg",
    "purpose": "Webアプリケーションの公開のために必要となるサーバーの役割やスペック、調達方法を決められるようになりましょう。<br><br>WebアプリケーションはWeb3層構成の上で運用する形が一般的ですが、システムの規模や目的によっては<span data-type='term'>メールサーバー</span>や<span data-type='term'>プロキシサーバー</span>なども組み合わせる必要があります。必要なサーバーの役割の決定は、全体の仕様と機能の設計ができてから行います。<br><br>各サーバーのスペックや台数を決めるためには、想定されるユーザー数や必要となる処理能力を試算する必要があります。基本的なスペックの基準となる<span data-type='term'>メモリ</span>や<span data-type='term'>CPU</span>、<span data-type='term'>ストレージ</span>についても押さえておきましょう。<br><br>それぞれのサーバーの役割を良く理解し、アプリケーションの公開に向けて必要なサーバー構成を実現できるようになりましょう。",
    "sceneId": "releasing-your-application",
    "getStarted": {
      "easy": {
        "description": "サーバーの構築や設定をするためには、その仕組みへの理解が必要です。ここでは、実作業の前に仕組みについて学んで、全体像のイメージを掴みましょう。",
        "tasks": [
          {
            "title": "OSの基本機能について学ぼう",
            "child": [
              "メモリ管理方式について学ぼう",
              "タスク管理方式について学ぼう",
              "データ管理方式について学ぼう"
            ]
          },
          {
            "title": "コンピュータハードウェアの構成と動作原理について学ぼう",
            "child": [
              "CPU/MPU/GPU、オペランド、クロックなどプロセッサについて学ぼう",
              "RAM/ROM、キャッシュなどのメモリの種類と特徴について学ぼう"
            ]
          }
        ]
      },
      "middle": {
        "description": "これまでは、アプリケーションサーバーやデータベースサーバーを中心に学んできました。ここでは、Nginxを使ってWebサーバーについて学び、Web3層構成を構築できるようになりましょう。Nginxは豊富な機能と使いやすさから、近年人気のWebサーバーです。",
        "tasks": [
          {
            "title": "NginxでWebサーバーを構築してみよう",
            "child": [
              "Nginxをインストールしよう",
              "Webサーバーにアクセスしてみよう",
              "Nginxのステータスを確認しよう",
              "HTMLファイルを/var/wwwフォルダにコピーしよう",
              "/etc/hostsにIPアドレスとドメインを設定しよう",
              "バーチャルホストを設定してWebページを立ち上げよう",
              "WebページをSSLに対応しよう"
            ]
          },
          {
            "title": "ローカル環境でNginxとRailsを連携しよう",
            "child": [
              "nginx.confを設定しよう",
              "バーチャルホストを設定しよう",
              "Railsのpuma.rbに設定を追記しよう",
              "NginxとRailsアプリを起動してアクセスを確認しよう",
              "Nginxの自動起動設定をしよう"
            ]
          }
        ]
      }
    }
  },
  {
    "first": "first","id":
  "networking",
    "title": "ネットワーク",
    "subTitle": "最初最初最初最初最初最初最初最初最初最初32423423423423最初最初最初",
    "description": "最初最初最初最初最初最初最初最初最初最初32423423423423最初最初最初、全てのWebページでHTMLとCSSは使われています。あなたの頭の中にある考えを表現したり発信したりする手段を手に入れましょう。",
    "thumbnail": "../images/skills/html-and-css/thumbnail.png",
    "overview": "最初最初最初最初最初最初最初最初最初最初32423423423423最初最初最初。<br><br>HTMLやCSSが書かれたファイルをWebサーバー上に置くことで、全世界の人にWebページを公開することができます。<br><br>HTMLはWebページに表示する文字や画像などの内容とそれらの構造を指定する役割があり、さまざまな<span data-type='term'>タグ</span>を使用して記述します。<br><br>CSSは色やレイアウトなど見た目を装飾する役割があり、HTMLで記述した要素に対して<span data-type='term'>プロパティ</span>で見た目を指定します。",
    "image": "../images/skills/networking/illustration.svg",
    "purpose": "ユーザーがWebアプリケーションを使えるようにするために、クライアントやサーバー間で通信が行えるネットワークを設定する必要があります。ネットワークに関する知識があれば自信を持って設定ができるでしょう。<br><br>知っておくべきこととしては、グローバルIPアドレスとローカルIPアドレスの仕組みや<span data-type='term'>NAT変換</span>、プロトコルと<span data-type='term'>ポート番号</span>の関係性、<span data-type='term'>ルーティング</span>の仕組みなどが挙げられます。<br><br>本格的なプロダクトを公開するために、ネットワークについて学びましょう。",
    "sceneId": "releasing-your-application",
    "getStarted": {
      "easy": {
        "description": "ネットワークの機能は複数の階層に分かれており、それぞれの役割や仕組みを学ぶにはたくさんの時間が必要です。まずは、すべての階層の役割を一連の流れで押さえて、ネットワークの全体像を掴めるようになりましょう。",
        "tasks": [
          {
            "title": "Webブラウザの動作について理解しよう",
            "child": [
              "HTTPについて学ぼう",
              "IPアドレスとDNSについて学ぼう",
              "ソケットについて学ぼう"
            ]
          },
          {
            "title": "データを運ぶ仕組みについて理解しよう",
            "child": [
              "プロトコル・スタックについて学ぼう",
              "TCPとUDPについて学ぼう",
              "パケットについて学ぼう",
              "LANアダプタについて学ぼう",
              "イーサネットについて学ぼう"
            ]
          },
          {
            "title": "インターネットに接続する仕組みについて理解しよう",
            "child": [
              "スイッチングハブについて学ぼう",
              "ルーターについて学ぼう",
              "コマンドでルーティングテーブルを確認しよう"
            ]
          },
          {
            "title": "インターネットの内部について理解しよう",
            "child": [
              "アクセス回線とプロバイダについて学ぼう",
              "PPPoE、IPoEについて学ぼう"
            ]
          },
          {
            "title": "サーバー側の動作について理解しよう",
            "child": [
              "ファイアウォールについて学ぼう",
              "キャッシュサーバーについて学ぼう",
              "コンテンツ配信ネットワーク（CDN）について学ぼう"
            ]
          }
        ]
      },
      "middle": {
        "description": "ここでは、クラウド上でのネットワーク構築にチャレンジしてみましょう。ネットワークを構築したら、ターミナル操作を通してネットワークを体験してみましょう",
        "tasks": [
          {
            "title": "AWS上にネットワークを構築してみよう",
            "child": [
              "VPCを作成しよう",
              "作成したVPC内でEC2インスタンスを起動しよう",
              "Elastic IPアドレスをインスタンスに割り当てよう"
            ]
          },
          {
            "title": "ターミナル操作でネットワークを体験してみよう",
            "child": [
              "pingコマンドでインスタンスへのネットワーク接続を確認しよう",
              "sshコマンドでインスタンスに接続しよう",
              "インスタンスにNginxをインストールしてWebサーバーを構築しよう",
              "curlコマンドでインスタンスにHTTPリクエストを送ろう",
              "ftpやscpコマンドでインスタンスにファイルを転送しよう"
            ]
          }
        ]
      }
    }
  },
  {
    "first": "first","id":
  "cloud-services",
    "title": "クラウドサービス",
    "subTitle": "最初最初最初最初最初最初最初最初最初最初32423423423423最初最初最初",
    "description": "最初最初最初最初最初最初最初最初最初最初32423423423423最初最初最初、全てのWebページでHTMLとCSSは使われています。あなたの頭の中にある考えを表現したり発信したりする手段を手に入れましょう。",
    "thumbnail": "../images/skills/html-and-css/thumbnail.png",
    "overview": "最初最初最初最初最初最初最初最初最初最初32423423423423最初最初最初。<br><br>HTMLやCSSが書かれたファイルをWebサーバー上に置くことで、全世界の人にWebページを公開することができます。<br><br>HTMLはWebページに表示する文字や画像などの内容とそれらの構造を指定する役割があり、さまざまな<span data-type='term'>タグ</span>を使用して記述します。<br><br>CSSは色やレイアウトなど見た目を装飾する役割があり、HTMLで記述した要素に対して<span data-type='term'>プロパティ</span>で見た目を指定します。",
    "image": "../images/skills/cloud-services/illustration.svg",
    "purpose": "クラウドサービスが普及する以前、本格的なプロダクトを公開するためにはサーバーやネットワーク機器を購入する必要がありましたが、初期費用以外にもメンテナンスなどの維持費用がかかる点が課題でした。<br><br>クラウドサービスを利用すれば、これらの諸費用を抑えることが可能です。プロダクトの公開時には、自分でサーバーを用意する必要がなく、さらに最小の構成でサービスを始められます。運用時には、CPUやメモリの不足を解消するリソースの追加や、故障した機器の入れ替えなど、必要となった時に迅速に対応できます。<br><br>クラウドサービスで運用しやすい環境を構築し、本格的なプロダクトを公開しましょう。",
    "sceneId": "releasing-your-application",
    "getStarted": {
      "easy": {
        "description": "AWSはITインフラのクラウドサービスの中でもっとも使われているサービスです。ここでは、AWSを使ったWebページのデプロイから始め、APIやデータベースの追加までできるようになりましょう。",
        "tasks": [
          {
            "title": "AWSで基本的なWebアプリケーションを構築してみよう",
            "child": [
              "Webページをデプロイしよう",
              "AWS Lambdaを使ってみよう",
              "Web APIを作成しよう",
              "データベースを作成しよう",
              "WebページからAPIを呼び出そう"
            ]
          }
        ]
      },
      "middle": {
        "description": "ここでは、ローカル環境で開発していたWebアプリケーションをAWS上にデプロイし、Web3層構成を構築することを目標に学んでいきます。ブログや記事なども調べながらチャレンジしてみましょう。",
        "tasks": [
          {
            "title": "RailsアプリをAWSでデプロイしてみよう",
            "child": [
              "EC2インスタンスを作成しよう",
              "インスタンスのセキュリティグループを設定しよう",
              "SSHでインスタンスに接続してRailsの環境を構築しよう",
              "アプリケーションをインスタンスにクローンしよう",
              "アセットをコンパイルしよう",
              "Pumaを設定してサーバーを起動しよう",
              "Capistranoでデプロイを自動化しよう"
            ]
          },
          {
            "title": "AWSでNginxを構築してRailsと連携できるようにしよう",
            "child": [
              "EC2インスタンスを作成しよう",
              "Elastic IPをインスタンスに紐付けよう",
              "インスタンスのセキュリティグループを設定しよう",
              "SSHでインスタンスに接続してNginxの環境を構築しよう",
              "Nginxを起動してブラウザからアクセス確認しよう",
              "Nginxのコンフィグファイルを設定してRailsと接続しよう"
            ]
          },
          {
            "title": "Amazon RDSでMySQLサーバーを構築しよう",
            "child": [
              "RDSインスタンスを作成しよう",
              "RDSのセキュリティグループを設定しよう",
              "EC2からRDS上のMySQLに接続してデータベースを作成しよう",
              "Railsのdatabase.ymlの設定を変更しよう"
            ]
          }
        ]
      }
    }
  },
  {
    "first": "first","id":
  "web-security",
    "title": "Webセキュリティ",
    "subTitle": "最初最初最初最初最初最初最初最初最初最初32423423423423最初最初最初",
    "description": "最初最初最初最初最初最初最初最初最初最初32423423423423最初最初最初、全てのWebページでHTMLとCSSは使われています。あなたの頭の中にある考えを表現したり発信したりする手段を手に入れましょう。",
    "thumbnail": "../images/skills/html-and-css/thumbnail.png",
    "overview": "最初最初最初最初最初最初最初最初最初最初32423423423423最初最初最初。<br><br>HTMLやCSSが書かれたファイルをWebサーバー上に置くことで、全世界の人にWebページを公開することができます。<br><br>HTMLはWebページに表示する文字や画像などの内容とそれらの構造を指定する役割があり、さまざまな<span data-type='term'>タグ</span>を使用して記述します。<br><br>CSSは色やレイアウトなど見た目を装飾する役割があり、HTMLで記述した要素に対して<span data-type='term'>プロパティ</span>で見た目を指定します。",
    "image": "../images/skills/web-security/illustration.svg",
    "purpose": "ユーザーが安心してWebアプリケーションを使い続けられるようにすることは、開発者にとって重要な責務です。<br><br>もしセキュリティ対策が不十分なWebアプリケーションを公開してしまうと、個人情報漏洩によりユーザーが被害を被るリスクがあります。そのようなアプリケーションでは、ユーザーは安心して使うことができません。<br><br>ユーザーが安心して使い続けられるWebアプリケーションを作るために、セキュリティ対策について学びましょう。",
    "sceneId": "releasing-your-application",
    "getStarted": {
      "easy": {
        "description": "ここでは、ユーザー登録機能の実装を通して、セキリュティを意識したアカウント管理方法について学んでいきましょう。安全なアカウント管理は、多数あるセキュリティ対策の一部ですが、一般的なWebアプリケーションに含まれる機能です。実際に手を動かしながらセキュリティのイメージを掴みましょう。",
        "tasks": [
          {
            "title": "ユーザー登録機能を作ってみよう",
            "child": [
              "ユーザーを検証しよう",
              "セキュアなパスワードを追加しよう",
              "フォームのエラーメッセージを追加しよう",
              "メールアドレスの受信確認をしてアカウントを有効化しよう",
              "パスワードを再設定できるようにしよう"
            ]
          },
          {
            "title": "代表的なセキュリティ機能を理解しよう",
            "child": [
              "認証機能について知ろう",
              "アカウント管理について知ろう",
              "認可制御について知ろう"
            ]
          }
        ]
      },
      "middle": {
        "description": "安全なWebアプリケーションを作るためには、セキュリティの体系的な知識が必要です。ここでは、セキュリティの基本について学んでいきましょう。まずは、代表的な脆弱性から学んでいくのが良いでしょう。",
        "tasks": [
          {
            "title": "Webセキュリティの基本について理解しよう",
            "child": [
              "脆弱性について知ろう",
              "HTTPとセッション管理について知ろう",
              "受動攻撃と同一オリジンポリシーについて知ろう",
              "CORSについて知ろう"
            ]
          },
          {
            "title": "Webアプリケーションのセキュリティ実装について理解しよう",
            "child": [
              "クロスサイト・スクリプティング（XSS）について知ろう",
              "SQLインジェクションについて知ろう",
              "クロスサイト・リクエストフォージェリ（CSRF）について知ろう",
              "クリックジャッキングについて知ろう",
              "セッション管理の不備について知ろう",
              "HTTPヘッダー・インジェクションについて知ろう",
              "メールヘッダー・インジェクションについて知ろう",
              "ディレクトリ・トラバーサルについて知ろう",
              "OSコマンド・インジェクションについて知ろう"
            ]
          }
        ]
      }
    }
  },
  {
    "first": "first","id":
  "ci-cd",
    "title": "CI/CD",
    "subTitle": "最初最初最初最初最初最初最初最初最初最初32423423423423最初最初最初",
    "description": "最初最初最初最初最初最初最初最初最初最初32423423423423最初最初最初、全てのWebページでHTMLとCSSは使われています。あなたの頭の中にある考えを表現したり発信したりする手段を手に入れましょう。",
    "thumbnail": "../images/skills/html-and-css/thumbnail.png",
    "overview": "最初最初最初最初最初最初最初最初最初最初32423423423423最初最初最初。<br><br>HTMLやCSSが書かれたファイルをWebサーバー上に置くことで、全世界の人にWebページを公開することができます。<br><br>HTMLはWebページに表示する文字や画像などの内容とそれらの構造を指定する役割があり、さまざまな<span data-type='term'>タグ</span>を使用して記述します。<br><br>CSSは色やレイアウトなど見た目を装飾する役割があり、HTMLで記述した要素に対して<span data-type='term'>プロパティ</span>で見た目を指定します。",
    "image": "../images/skills/ci-cd/illustration.svg",
    "purpose": "CI/CDを取り入れることで、開発者の生産性向上やアプリケーションの品質向上が期待できます。<br><br>サービスのリリース後も、機能の追加や不具合の修正は頻繁に行われます。CI/CDの環境があると、テスト・ビルド・デプロイの自動実行と、それらの成否の通知のおかげで、品質を保ちつつ素早く開発できます。<br><br>品質を担保しつつ開発スピードを高めるためにCI/CDについて学びましょう。",
    "sceneId": "continuous-delivery",
    "getStarted": {
      "easy": {
        "description": "CircleCIは導入や運用が簡単で使いやすく人気のCI/CDツールです。まずは、サンプルプロジェクトでCI/CD環境を構築してイメージを掴みましょう。",
        "tasks": [
          {
            "title": "CI/CDツールを使ってみよう",
            "child": [
              "GitHubにリポジトリを作成しよう",
              ".ymlファイルを追加しよう",
              "CircleCIでビルドを準備しよう",
              "CircleCIビルドを実行しよう",
              "ワークスペース機能を使ってみよう"
            ]
          }
        ]
      },
      "middle": {
        "description": "ここでは、実際にRailsアプリケーションにCI/CDを導入してみましょう。学習のために新しくRailsアプリケーションを構築してCI/CDツールを導入するのもおすすめです。",
        "tasks": [
          {
            "title": "RailsアプリケーションでCI/CD環境を構築しよう",
            "child": [
              "RailsアプリケーションにCircleCIの設定を追加しよう",
              "リポジトリにコミットしてパイプラインを確認しよう",
              "RubyとMySQLのDockerイメージを指定しよう",
              "依存パッケージをインストールをしよう",
              "Rspecのテストを追加しよう",
              "Rubocopのコードスタイルチェックを追加しよう",
              "メインブランチへのマージを検知してAWSでデプロイしよう"
            ]
          }
        ]
      }
    }
  },
  {
    "first": "first","id":
  "data-analytics-fundamentals",
    "title": "データ分析基盤",
    "subTitle": "最初最初最初最初最初最初最初最初最初最初32423423423423最初最初最初",
    "description": "最初最初最初最初最初最初最初最初最初最初32423423423423最初最初最初、全てのWebページでHTMLとCSSは使われています。あなたの頭の中にある考えを表現したり発信したりする手段を手に入れましょう。",
    "thumbnail": "../images/skills/html-and-css/thumbnail.png",
    "overview": "最初最初最初最初最初最初最初最初最初最初32423423423423最初最初最初。<br><br>HTMLやCSSが書かれたファイルをWebサーバー上に置くことで、全世界の人にWebページを公開することができます。<br><br>HTMLはWebページに表示する文字や画像などの内容とそれらの構造を指定する役割があり、さまざまな<span data-type='term'>タグ</span>を使用して記述します。<br><br>CSSは色やレイアウトなど見た目を装飾する役割があり、HTMLで記述した要素に対して<span data-type='term'>プロパティ</span>で見た目を指定します。",
    "image": "../images/skills/data-analysis-platform/illustration.svg",
    "purpose": "サービスに対するユーザーの不満を開発者が察知して改善することは簡単ではありません。しかし、様々なデータを分析して問題を把握できるようになれば、それを改善してユーザー体験を向上させることが可能です。<br><br>多くのユーザーに満足してもらえるようなサービスにするために、分析基盤は欠かせないでしょう。<br><br>まずは、データ分析基盤について学んで、現状を把握するために必要なデータを揃える必要があります。データが揃ったら分析を行い、仮説・検証を回せるようになりましょう。",
    "sceneId": "continuous-delivery",
    "getStarted": {
      "easy": {
        "description": "Google Analyticsは、もっとも使われているデータ分析ツールです。 ここでは、分析基盤を構築する前にGoogle Analyticsを通じて、データ分析の目的や指標について学んでいきましょう。",
        "tasks": [
          {
            "title": "Google Analyticsを使ってデータ分析の基本を理解しよう",
            "child": [
              "データ分析の活用法について知ろう",
              "Google Analyticsを設定しよう",
              "計測用のJavaScriptコードを追加しよう",
              "セグメントごとのレポートを表示しよう",
              "オリジナルWebアプリの目標を設定しよう"
            ]
          }
        ]
      },
      "middle": {
        "description": "実践的なデータ分析をするには、データベースやログなど、さまざまなデータを集める必要があります。ここでは、それらのデータを総合的に活用するためのデータ分析基盤の構築にチャレンジしてみましょう。",
        "tasks": [
          {
            "title": "AWSでデータ分析基盤を構築してみよう",
            "child": [
              "AWSのBIサービスのAmazon QuickSightを使ってみよう",
              "データを可視化してみよう",
              "SQLを使って分析してみよう"
            ]
          }
        ]
      }
    }
  },
  {
    "first": "first","id":
  "performance",
    "title": "パフォーマンス",
    "subTitle": "最初最初最初最初最初最初最初最初最初最初32423423423423最初最初最初",
    "description": "最初最初最初最初最初最初最初最初最初最初32423423423423最初最初最初、全てのWebページでHTMLとCSSは使われています。あなたの頭の中にある考えを表現したり発信したりする手段を手に入れましょう。",
    "thumbnail": "../images/skills/html-and-css/thumbnail.png",
    "overview": "最初最初最初最初最初最初最初最初最初最初32423423423423最初最初最初。<br><br>HTMLやCSSが書かれたファイルをWebサーバー上に置くことで、全世界の人にWebページを公開することができます。<br><br>HTMLはWebページに表示する文字や画像などの内容とそれらの構造を指定する役割があり、さまざまな<span data-type='term'>タグ</span>を使用して記述します。<br><br>CSSは色やレイアウトなど見た目を装飾する役割があり、HTMLで記述した要素に対して<span data-type='term'>プロパティ</span>で見た目を指定します。",
    "image": "../images/skills/performance/illustration.svg",
    "purpose": "Webアプリケーションのパフォーマンスを正しく把握して、必要に応じて改善していくことは、ユーザーに快適な環境を提供するために必要なことです。<br><br>Webアプリケーションを公開した直後はパフォーマンスに問題が無かったとしても、ユーザー数の増加や機能追加などにより徐々にパフォーマンスは低下するものです。問題をいち早く見つけるには、パフォーマンスの目標値を定めて常に計測しておくことが必要です。<br><br>また、見つかった問題の難易度が高く、すぐには改善できない場合もあります。しかし、問題が積み重なると、ボトルネックの特定が難しくなるので、改善しないまでも調査については随時行うことが望まれます。<br><br>まずは、パフォーマンスの計測方法と主な改善の方法を学びましょう。",
    "sceneId": "continuous-delivery",
    "getStarted": {
      "easy": {
        "description": "ここでは、Webページのパフォーマンス改善について学んでいきます。まずは、パフォーマンスの計測やチューニングを体験してイメージを掴みましょう。計測方法は、Chromeの開発者ツールを使うのがオススメです。記事やブログで使い方について調べてみましょう。",
        "tasks": [
          {
            "title": "Webページのパフォーマンスを改善しよう",
            "child": [
              "開発者ツールでWebページのパフォーマンスを計測しよう",
              "リソースを事前読み込みしておこう",
              "CSSスプライトを使用してみよう",
              "HTML/CSS/JavaScript/画像のファイルサイズを最小化してみよう",
              "Gzip圧縮、ブラウザキャッシュを活用にしてみよう",
              "画面レイアウトの変更頻度と再描画に掛かる時間の関係を理解しよう"
            ]
          }
        ]
      },
      "middle": {
        "description": "実践でのパフォーマンスチューニングでは、アプリケーションサーバーやデータベースサーバーを含めたシステム全体からボトルネックを解消するスキルが必要です。ここでは、システム全体を含めたパフォーマンスの基礎について学んでいきましょう。",
        "tasks": [
          {
            "title": "パフォーマンスの基本について理解しよう",
            "child": [
              "レスポンスとスループットについて知ろう",
              "アルゴリズムの基本について知ろう",
              "複数のソートアルゴリズムを実装して実行時間を比較してみよう"
            ]
          },
          {
            "title": "Railsアプリケーションでランキング機能のパフォーマンスを改善してみよう",
            "child": [
              "データベースに1万件のユーザーのダミーデータを作成しよう",
              "データベースに1万件の商品のダミーデータを作成しよう",
              "データベースに10万件の商品購買履歴のダミーデータを作成しよう",
              "年代別の人気商品ランキングトップ10を表示するページを作成してみよう",
              "開発者ツールでランキングページのパフォーマンスを計測してみよう",
              "gemのrack-mini-profilerを使ってパフォーマンスを計測してみよう",
              "ランキングページのパフォーマンスをチューニングしてみよう"
            ]
          }
        ]
      }
    }
  },
  {
    "first": "first","id":
  "scalability",
    "title": "スケーラビリティ",
    "subTitle": "最初最初最初最初最初最初最初最初最初最初32423423423423最初最初最初",
    "description": "最初最初最初最初最初最初最初最初最初最初32423423423423最初最初最初、全てのWebページでHTMLとCSSは使われています。あなたの頭の中にある考えを表現したり発信したりする手段を手に入れましょう。",
    "thumbnail": "../images/skills/html-and-css/thumbnail.png",
    "overview": "最初最初最初最初最初最初最初最初最初最初32423423423423最初最初最初。<br><br>HTMLやCSSが書かれたファイルをWebサーバー上に置くことで、全世界の人にWebページを公開することができます。<br><br>HTMLはWebページに表示する文字や画像などの内容とそれらの構造を指定する役割があり、さまざまな<span data-type='term'>タグ</span>を使用して記述します。<br><br>CSSは色やレイアウトなど見た目を装飾する役割があり、HTMLで記述した要素に対して<span data-type='term'>プロパティ</span>で見た目を指定します。",
    "image": "../images/skills/scalability/illustration.svg",
    "purpose": "スケーラビリティの高いシステムを構築できるようになれば、ユーザー数が急激に増えてもサーバーが落ちることはなく、サービスを提供し続けることができます。<br><br>将来的なサービスの成長を見越して、<span data-type='term'>スケーリング</span>の仕組みを取り入れたシステムの構築を目指しましょう。",
    "sceneId": "continuous-delivery",
    "getStarted": {
      "easy": {
        "description": "ここでは、AWSでスケーラブルなWebアプリケーションを構築する方法を学びます。ドキュメントが充実しているWordpressを紹介しますが、イメージが掴めたらRailsアプリケーションでもチャレンジしてみましょう。",
        "tasks": [
          {
            "title": "AWSでスケーラブルなWebアプリケーションを構築してみよう",
            "child": [
              "Amazon VPCを作成しよう",
              "ブログアプリのWebサーバーを作成しよう",
              "ブログアプリのRDS DBインスタンスを作成しよう",
              "ELBでロードバランサーを作成しよう",
              "EC2インスタンスを増やして負荷分散してみよう",
              "RDS DBインスタンスをマルチAZ化してみよう"
            ]
          }
        ]
      },
      "middle": {
        "description": "スケーラビリティに関するスキルは実際に運用や保守を経験しながら学ぶのが理想です。ここでは、スケーラビリティに関するスキルにはどんなものがあるのかイメージできることを目指しましょう。",
        "tasks": [
          {
            "title": "拡張性の基本について理解しよう",
            "child": [
              "サイジングの重要性について知ろう",
              "クラウドサービスでのスケールアップとスケールダウンについて知ろう",
              "オートスケールについて知ろう",
              "ジョブ対応のスケールアウトとスケールインについて知ろう",
              "スケジュール対応のスケールアウトとスケールインについて知ろう"
            ]
          }
        ]
      }
    }
  },
  {
    "first": "first","id":
  "fault-tolerance",
    "title": "耐障害性",
    "subTitle": "最初最初最初最初最初最初最初最初最初最初32423423423423最初最初最初",
    "description": "最初最初最初最初最初最初最初最初最初最初32423423423423最初最初最初、全てのWebページでHTMLとCSSは使われています。あなたの頭の中にある考えを表現したり発信したりする手段を手に入れましょう。",
    "thumbnail": "../images/skills/html-and-css/thumbnail.png",
    "overview": "最初最初最初最初最初最初最初最初最初最初32423423423423最初最初最初。<br><br>HTMLやCSSが書かれたファイルをWebサーバー上に置くことで、全世界の人にWebページを公開することができます。<br><br>HTMLはWebページに表示する文字や画像などの内容とそれらの構造を指定する役割があり、さまざまな<span data-type='term'>タグ</span>を使用して記述します。<br><br>CSSは色やレイアウトなど見た目を装飾する役割があり、HTMLで記述した要素に対して<span data-type='term'>プロパティ</span>で見た目を指定します。",
    "image": "../images/skills/fault-tolerance/illustration.svg",
    "purpose": "障害によるサービス停止を起こしにくいシステムを構築できれば、ユーザーに安定してサービスを届けられます。<br><br>Webアプリケーションをリリースすると、ユーザー数の増加に伴い、サーバー負荷やデータ量が増加します。次第にレスポンスが悪くなり、これが積み重なると障害へ発展する可能性があります。しかし、全ての障害要因を未然に取り除くことは困難なため、開発者は障害の発生を想定して様々な準備を行う必要があります。<br><br>冗長化されたシステムを構築して、障害対応中もユーザーにサービスを提供し続けられるようにしましょう。さらに予防保守を取り入れて、障害の発生頻度をできるだけ下げることも大切です。<br><br>障害に強いシステムを構築するための方法について学んでいきましょう。",
    "sceneId": "continuous-delivery",
    "getStarted": {
      "easy": {
        "description": "ここでは、アプリケーションやリソースを監視して、障害を検知する仕組みを作ってみましょう。CloudWatchはAWSで監視をするときに使われるサービスです。",
        "tasks": [
          {
            "title": "CloudWatchでモニタリングしてみよう",
            "child": [
              "請求アラートを有効にしよう",
              "請求アラームを作成する",
              "アラームの状態をチェックしよう",
              "請求アラームを編集しよう",
              "請求アラームを削除しよう"
            ]
          },
          {
            "title": "メトリクスをCloudWatchに発行してみよう",
            "child": [
              "データ構成を定義しよう",
              "CloudWatchにメトリクスを追加しよう",
              "CloudWatchから統計を取得しよう",
              "コンソールでグラフを表示しよう"
            ]
          }
        ]
      },
      "middle": {
        "description": "障害に関するスキルは実際に運用や保守を経験しながら学ぶのが理想です。ここでは、障害に関するスキルには、どんなものがあるのかイメージできることを目指しましょう。",
        "tasks": [
          {
            "title": "可用性の基本について理解しよう",
            "child": [
              "故障の防止について知ろう",
              "迅速な復旧について知ろう",
              "対応手順のルール化と継続的な改善の取組みについて知ろう"
            ]
          },
          {
            "title": "運用と保守の基本について知ろう",
            "child": [
              "システム監視について知ろう",
              "ジョブ管理について知ろう",
              "バックアップ管理について知ろう"
            ]
          }
        ]
      }
    }
  }
]
